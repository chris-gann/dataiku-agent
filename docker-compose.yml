version: '3.8'

services:
  dataiku-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dataiku-agent
    environment:
      - ENVIRONMENT=development
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - O3_REASONING_EFFORT=${O3_REASONING_EFFORT:-medium}
      - REDIS_URL=redis://redis:6379/0
      - CACHE_BACKEND=redis
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SENTRY_DSN=${SENTRY_DSN}
    ports:
      - "8080:8080"  # Health check
      - "9090:9090"  # Metrics
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dataiku-network

  redis:
    image: redis:7-alpine
    container_name: dataiku-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dataiku-network

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: dataiku-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9091:9090"
    depends_on:
      - dataiku-agent
    restart: unless-stopped
    networks:
      - dataiku-network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dataiku-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - dataiku-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  dataiku-network:
    driver: bridge 